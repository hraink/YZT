// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 4.2.2 by TAF Team.
// Generated from `./RiskServer.jce'
// **********************************************************************

var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}

var Risk = Risk || {};
module.exports.Risk = Risk;

Risk.RiskInterProxy = function () {
    this._name   = undefined;
    this._worker = undefined;
}

Risk.RiskInterProxy.prototype.setTimeout = function (iTimeout) {
    this._worker.timeout = iTimeout;
}

Risk.RiskInterProxy.prototype.getTimeout = function ( ) {
    return this._worker.timeout;
}


Risk.UserRisk = function() {
    this.userName = "";
    this.risk1 = 0;
    this.risk2 = 0;
    this.risk3 = 0;
    this.risk4 = 0;
    this.risk5 = 0;
    this.risk6 = 0;
    this.risk7 = 0;
    this.risk8 = 0;
    this.riskType = "";
    this.userType = "";
    this.riskEndure = "";
    this.winHope = "";
    this.riskPrepare = "";
    this.low = 0;
    this.middle = 0;
    this.high = 0;
    this._classname = "Risk.UserRisk";
};
Risk.UserRisk.prototype = new TafStream.JceStruct();
Risk.UserRisk._classname = "Risk.UserRisk";

Risk.UserRisk._write = function (os, tag, value) { os.writeStruct(tag, value); }
Risk.UserRisk._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Risk.UserRisk._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Risk.UserRisk();
    tmp.userName = is.readString(0, true, "");
    tmp.risk1 = is.readInt32(1, true, 0);
    tmp.risk2 = is.readInt32(2, true, 0);
    tmp.risk3 = is.readInt32(3, true, 0);
    tmp.risk4 = is.readInt32(4, true, 0);
    tmp.risk5 = is.readInt32(5, true, 0);
    tmp.risk6 = is.readInt32(6, true, 0);
    tmp.risk7 = is.readInt32(7, true, 0);
    tmp.risk8 = is.readInt32(8, true, 0);
    tmp.riskType = is.readString(9, false, "");
    tmp.userType = is.readString(10, false, "");
    tmp.riskEndure = is.readString(11, false, "");
    tmp.winHope = is.readString(12, false, "");
    tmp.riskPrepare = is.readString(13, false, "");
    tmp.low = is.readInt32(14, false, 0);
    tmp.middle = is.readInt32(15, false, 0);
    tmp.high = is.readInt32(16, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Risk.UserRisk.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.userName);
    os.writeInt32(1, this.risk1);
    os.writeInt32(2, this.risk2);
    os.writeInt32(3, this.risk3);
    os.writeInt32(4, this.risk4);
    os.writeInt32(5, this.risk5);
    os.writeInt32(6, this.risk6);
    os.writeInt32(7, this.risk7);
    os.writeInt32(8, this.risk8);
    if (this.riskType != undefined && this.riskType != "") {
        os.writeString(9, this.riskType);
    }
    if (this.userType != undefined && this.userType != "") {
        os.writeString(10, this.userType);
    }
    if (this.riskEndure != undefined && this.riskEndure != "") {
        os.writeString(11, this.riskEndure);
    }
    if (this.winHope != undefined && this.winHope != "") {
        os.writeString(12, this.winHope);
    }
    if (this.riskPrepare != undefined && this.riskPrepare != "") {
        os.writeString(13, this.riskPrepare);
    }
    if (this.low != undefined && this.low != 0) {
        os.writeInt32(14, this.low);
    }
    if (this.middle != undefined && this.middle != 0) {
        os.writeInt32(15, this.middle);
    }
    if (this.high != undefined && this.high != 0) {
        os.writeInt32(16, this.high);
    }
    os.resumePrecision && os.resumePrecision();
};
Risk.UserRisk.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Risk.UserRisk.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Risk.UserRisk.prototype.toObject = function() { 
    var tmp = {};

    tmp.userName = this.userName;
    tmp.risk1 = this.risk1;
    tmp.risk2 = this.risk2;
    tmp.risk3 = this.risk3;
    tmp.risk4 = this.risk4;
    tmp.risk5 = this.risk5;
    tmp.risk6 = this.risk6;
    tmp.risk7 = this.risk7;
    tmp.risk8 = this.risk8;
    tmp.riskType = this.riskType;
    tmp.userType = this.userType;
    tmp.riskEndure = this.riskEndure;
    tmp.winHope = this.winHope;
    tmp.riskPrepare = this.riskPrepare;
    tmp.low = this.low;
    tmp.middle = this.middle;
    tmp.high = this.high;
    
    return tmp;
}
Risk.UserRisk.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("userName") || (this.userName = json.userName);
    !json.hasOwnProperty("risk1") || (this.risk1 = json.risk1);
    !json.hasOwnProperty("risk2") || (this.risk2 = json.risk2);
    !json.hasOwnProperty("risk3") || (this.risk3 = json.risk3);
    !json.hasOwnProperty("risk4") || (this.risk4 = json.risk4);
    !json.hasOwnProperty("risk5") || (this.risk5 = json.risk5);
    !json.hasOwnProperty("risk6") || (this.risk6 = json.risk6);
    !json.hasOwnProperty("risk7") || (this.risk7 = json.risk7);
    !json.hasOwnProperty("risk8") || (this.risk8 = json.risk8);
    !json.hasOwnProperty("riskType") || (this.riskType = json.riskType);
    !json.hasOwnProperty("userType") || (this.userType = json.userType);
    !json.hasOwnProperty("riskEndure") || (this.riskEndure = json.riskEndure);
    !json.hasOwnProperty("winHope") || (this.winHope = json.winHope);
    !json.hasOwnProperty("riskPrepare") || (this.riskPrepare = json.riskPrepare);
    !json.hasOwnProperty("low") || (this.low = json.low);
    !json.hasOwnProperty("middle") || (this.middle = json.middle);
    !json.hasOwnProperty("high") || (this.high = json.high);
}
Risk.UserRisk.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Risk.UserRisk.new = function () {
    return new Risk.UserRisk();
}
Risk.UserRisk.create = function (is) {
    return Risk.UserRisk._readFrom(is);
}
Risk.UserAuthReq = function() {
    this.userName = "";
    this.code = "";
    this._classname = "Risk.UserAuthReq";
};
Risk.UserAuthReq.prototype = new TafStream.JceStruct();
Risk.UserAuthReq._classname = "Risk.UserAuthReq";

Risk.UserAuthReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Risk.UserAuthReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Risk.UserAuthReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Risk.UserAuthReq();
    tmp.userName = is.readString(0, true, "");
    tmp.code = is.readString(1, true, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Risk.UserAuthReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.userName);
    os.writeString(1, this.code);
    os.resumePrecision && os.resumePrecision();
};
Risk.UserAuthReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Risk.UserAuthReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Risk.UserAuthReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.userName = this.userName;
    tmp.code = this.code;
    
    return tmp;
}
Risk.UserAuthReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("userName") || (this.userName = json.userName);
    !json.hasOwnProperty("code") || (this.code = json.code);
}
Risk.UserAuthReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Risk.UserAuthReq.new = function () {
    return new Risk.UserAuthReq();
}
Risk.UserAuthReq.create = function (is) {
    return Risk.UserAuthReq._readFrom(is);
}
Risk.UserAuthRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.hasRights = true;
    this.endDate = "";
    this._classname = "Risk.UserAuthRsp";
};
Risk.UserAuthRsp.prototype = new TafStream.JceStruct();
Risk.UserAuthRsp._classname = "Risk.UserAuthRsp";

Risk.UserAuthRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Risk.UserAuthRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Risk.UserAuthRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Risk.UserAuthRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, true, "");
    tmp.hasRights = is.readBoolean(2, false, true);
    tmp.endDate = is.readString(3, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Risk.UserAuthRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    os.writeString(1, this.iMsg);
    if (this.hasRights != undefined && this.hasRights != true) {
        os.writeBoolean(2, this.hasRights);
    }
    if (this.endDate != undefined && this.endDate != "") {
        os.writeString(3, this.endDate);
    }
    os.resumePrecision && os.resumePrecision();
};
Risk.UserAuthRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Risk.UserAuthRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Risk.UserAuthRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.hasRights = this.hasRights;
    tmp.endDate = this.endDate;
    
    return tmp;
}
Risk.UserAuthRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("hasRights") || (this.hasRights = json.hasRights);
    !json.hasOwnProperty("endDate") || (this.endDate = json.endDate);
}
Risk.UserAuthRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Risk.UserAuthRsp.new = function () {
    return new Risk.UserAuthRsp();
}
Risk.UserAuthRsp.create = function (is) {
    return Risk.UserAuthRsp._readFrom(is);
}

Risk.RiskInterProxy.prototype.queryUserAuth = function (stReq) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, stReq);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.stRsp = is.readStruct(2, true, Risk.UserAuthRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('queryUserAuth', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

Risk.RiskInterProxy.prototype.queryUserRisk = function (userName) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, userName);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.userRisk = is.readStruct(2, true, Risk.UserRisk);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('queryUserRisk', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

Risk.RiskInterProxy.prototype.setUserRisk = function (userRisk) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, userRisk);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('setUserRisk', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}



