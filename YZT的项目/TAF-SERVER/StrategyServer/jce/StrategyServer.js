// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 4.2.2 by TAF Team.
// Generated from `./StrategyServer.jce'
// **********************************************************************

var assert    = require('assert');
var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}

var Strategy = Strategy || {};
module.exports.Strategy = Strategy;


Strategy.StgyCategory = {
    Recommend : 1,
    LimitUp : 2,
    Leading : 3,
    FundCode : 4,
    Trends : 5
};
Strategy.StgyCategory._write = function(os, tag, val) { return os.writeInt32(tag, val); }
Strategy.StgyCategory._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

Strategy.StgyInfo = function() {
    this.stgyCode = "";
    this.stgyName = "";
    this.stgyStyle = "";
    this.instruction = "";
    this.creator = "";
    this.winLine = 0;
    this.lossLine = 0;
    this.stgyVane = "";
    this.maxRise = 0;
    this.maxRiseWinRate = 0;
    this.maxRiseHolder = 0;
    this.winRate = 0;
    this.winRateMaxRise = 0;
    this.winRateHolder = 0;
    this.beginCalcDate = "";
    this.endCalcDate = "";
    this.newChooseDate = "";
    this.newChooseNum = 0;
    this.loopBack = 0;
    this.reviewDesc = "";
    this.pic = "";
    this.instruction_new = "";
    this.stgyCategory = Strategy.StgyCategory.Recommend;
    this._classname = "Strategy.StgyInfo";
};
Strategy.StgyInfo.prototype = new TafStream.JceStruct();
Strategy.StgyInfo._classname = "Strategy.StgyInfo";

Strategy.StgyInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StgyInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StgyInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StgyInfo();
    tmp.stgyCode = is.readString(0, true, "");
    tmp.stgyName = is.readString(1, true, "");
    tmp.stgyStyle = is.readString(2, false, "");
    tmp.instruction = is.readString(3, false, "");
    tmp.creator = is.readString(4, false, "");
    tmp.winLine = is.readDouble(5, false, 0);
    tmp.lossLine = is.readDouble(6, false, 0);
    tmp.stgyVane = is.readString(7, false, "");
    tmp.maxRise = is.readDouble(8, false, 0);
    tmp.maxRiseWinRate = is.readDouble(9, false, 0);
    tmp.maxRiseHolder = is.readInt32(10, false, 0);
    tmp.winRate = is.readDouble(11, false, 0);
    tmp.winRateMaxRise = is.readDouble(12, false, 0);
    tmp.winRateHolder = is.readInt32(13, false, 0);
    tmp.beginCalcDate = is.readString(14, false, "");
    tmp.endCalcDate = is.readString(15, false, "");
    tmp.newChooseDate = is.readString(16, false, "");
    tmp.newChooseNum = is.readInt32(17, false, 0);
    tmp.loopBack = is.readDouble(18, false, 0);
    tmp.reviewDesc = is.readString(19, false, "");
    tmp.pic = is.readString(20, false, "");
    tmp.instruction_new = is.readString(21, false, "");
    tmp.stgyCategory = is.readInt32(22, false, Strategy.StgyCategory.Recommend);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StgyInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.stgyCode);
    os.writeString(1, this.stgyName);
    if (this.stgyStyle != undefined && this.stgyStyle != "") {
        os.writeString(2, this.stgyStyle);
    }
    if (this.instruction != undefined && this.instruction != "") {
        os.writeString(3, this.instruction);
    }
    if (this.creator != undefined && this.creator != "") {
        os.writeString(4, this.creator);
    }
    if (this.winLine != undefined && this.winLine != 0) {
        os.writeDouble(5, this.winLine);
    }
    if (this.lossLine != undefined && this.lossLine != 0) {
        os.writeDouble(6, this.lossLine);
    }
    if (this.stgyVane != undefined && this.stgyVane != "") {
        os.writeString(7, this.stgyVane);
    }
    if (this.maxRise != undefined && this.maxRise != 0) {
        os.writeDouble(8, this.maxRise);
    }
    if (this.maxRiseWinRate != undefined && this.maxRiseWinRate != 0) {
        os.writeDouble(9, this.maxRiseWinRate);
    }
    if (this.maxRiseHolder != undefined && this.maxRiseHolder != 0) {
        os.writeInt32(10, this.maxRiseHolder);
    }
    if (this.winRate != undefined && this.winRate != 0) {
        os.writeDouble(11, this.winRate);
    }
    if (this.winRateMaxRise != undefined && this.winRateMaxRise != 0) {
        os.writeDouble(12, this.winRateMaxRise);
    }
    if (this.winRateHolder != undefined && this.winRateHolder != 0) {
        os.writeInt32(13, this.winRateHolder);
    }
    if (this.beginCalcDate != undefined && this.beginCalcDate != "") {
        os.writeString(14, this.beginCalcDate);
    }
    if (this.endCalcDate != undefined && this.endCalcDate != "") {
        os.writeString(15, this.endCalcDate);
    }
    if (this.newChooseDate != undefined && this.newChooseDate != "") {
        os.writeString(16, this.newChooseDate);
    }
    if (this.newChooseNum != undefined && this.newChooseNum != 0) {
        os.writeInt32(17, this.newChooseNum);
    }
    if (this.loopBack != undefined && this.loopBack != 0) {
        os.writeDouble(18, this.loopBack);
    }
    if (this.reviewDesc != undefined && this.reviewDesc != "") {
        os.writeString(19, this.reviewDesc);
    }
    if (this.pic != undefined && this.pic != "") {
        os.writeString(20, this.pic);
    }
    if (this.instruction_new != undefined && this.instruction_new != "") {
        os.writeString(21, this.instruction_new);
    }
    os.writeInt32(22, this.stgyCategory);
    os.resumePrecision && os.resumePrecision();
};
Strategy.StgyInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StgyInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StgyInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.stgyCode = this.stgyCode;
    tmp.stgyName = this.stgyName;
    tmp.stgyStyle = this.stgyStyle;
    tmp.instruction = this.instruction;
    tmp.creator = this.creator;
    tmp.winLine = this.winLine;
    tmp.lossLine = this.lossLine;
    tmp.stgyVane = this.stgyVane;
    tmp.maxRise = this.maxRise;
    tmp.maxRiseWinRate = this.maxRiseWinRate;
    tmp.maxRiseHolder = this.maxRiseHolder;
    tmp.winRate = this.winRate;
    tmp.winRateMaxRise = this.winRateMaxRise;
    tmp.winRateHolder = this.winRateHolder;
    tmp.beginCalcDate = this.beginCalcDate;
    tmp.endCalcDate = this.endCalcDate;
    tmp.newChooseDate = this.newChooseDate;
    tmp.newChooseNum = this.newChooseNum;
    tmp.loopBack = this.loopBack;
    tmp.reviewDesc = this.reviewDesc;
    tmp.pic = this.pic;
    tmp.instruction_new = this.instruction_new;
    tmp.stgyCategory = this.stgyCategory;
    
    return tmp;
}
Strategy.StgyInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stgyCode") || (this.stgyCode = json.stgyCode);
    !json.hasOwnProperty("stgyName") || (this.stgyName = json.stgyName);
    !json.hasOwnProperty("stgyStyle") || (this.stgyStyle = json.stgyStyle);
    !json.hasOwnProperty("instruction") || (this.instruction = json.instruction);
    !json.hasOwnProperty("creator") || (this.creator = json.creator);
    !json.hasOwnProperty("winLine") || (this.winLine = json.winLine);
    !json.hasOwnProperty("lossLine") || (this.lossLine = json.lossLine);
    !json.hasOwnProperty("stgyVane") || (this.stgyVane = json.stgyVane);
    !json.hasOwnProperty("maxRise") || (this.maxRise = json.maxRise);
    !json.hasOwnProperty("maxRiseWinRate") || (this.maxRiseWinRate = json.maxRiseWinRate);
    !json.hasOwnProperty("maxRiseHolder") || (this.maxRiseHolder = json.maxRiseHolder);
    !json.hasOwnProperty("winRate") || (this.winRate = json.winRate);
    !json.hasOwnProperty("winRateMaxRise") || (this.winRateMaxRise = json.winRateMaxRise);
    !json.hasOwnProperty("winRateHolder") || (this.winRateHolder = json.winRateHolder);
    !json.hasOwnProperty("beginCalcDate") || (this.beginCalcDate = json.beginCalcDate);
    !json.hasOwnProperty("endCalcDate") || (this.endCalcDate = json.endCalcDate);
    !json.hasOwnProperty("newChooseDate") || (this.newChooseDate = json.newChooseDate);
    !json.hasOwnProperty("newChooseNum") || (this.newChooseNum = json.newChooseNum);
    !json.hasOwnProperty("loopBack") || (this.loopBack = json.loopBack);
    !json.hasOwnProperty("reviewDesc") || (this.reviewDesc = json.reviewDesc);
    !json.hasOwnProperty("pic") || (this.pic = json.pic);
    !json.hasOwnProperty("instruction_new") || (this.instruction_new = json.instruction_new);
    !json.hasOwnProperty("stgyCategory") || (this.stgyCategory = json.stgyCategory);
}
Strategy.StgyInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StgyInfo.new = function () {
    return new Strategy.StgyInfo();
}
Strategy.StgyInfo.create = function (is) {
    return Strategy.StgyInfo._readFrom(is);
}

Strategy.ChooseStock = function() {
    this.stockCode = "";
    this.stockName = "";
    this.market = 0;
    this.price = 0;
    this.maxRise = 0;
    this.dayRise = 0;
    this._classname = "Strategy.ChooseStock";
};
Strategy.ChooseStock.prototype = new TafStream.JceStruct();
Strategy.ChooseStock._classname = "Strategy.ChooseStock";

Strategy.ChooseStock._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.ChooseStock._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.ChooseStock._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.ChooseStock();
    tmp.stockCode = is.readString(0, true, "");
    tmp.stockName = is.readString(1, true, "");
    tmp.market = is.readInt32(2, true, 0);
    tmp.price = is.readDouble(3, false, 0);
    tmp.maxRise = is.readDouble(4, false, 0);
    tmp.dayRise = is.readDouble(5, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.ChooseStock.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.stockCode);
    os.writeString(1, this.stockName);
    os.writeInt32(2, this.market);
    if (this.price != undefined && this.price != 0) {
        os.writeDouble(3, this.price);
    }
    if (this.maxRise != undefined && this.maxRise != 0) {
        os.writeDouble(4, this.maxRise);
    }
    if (this.dayRise != undefined && this.dayRise != 0) {
        os.writeDouble(5, this.dayRise);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.ChooseStock.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.ChooseStock.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.ChooseStock.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockCode = this.stockCode;
    tmp.stockName = this.stockName;
    tmp.market = this.market;
    tmp.price = this.price;
    tmp.maxRise = this.maxRise;
    tmp.dayRise = this.dayRise;
    
    return tmp;
}
Strategy.ChooseStock.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockCode") || (this.stockCode = json.stockCode);
    !json.hasOwnProperty("stockName") || (this.stockName = json.stockName);
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("price") || (this.price = json.price);
    !json.hasOwnProperty("maxRise") || (this.maxRise = json.maxRise);
    !json.hasOwnProperty("dayRise") || (this.dayRise = json.dayRise);
}
Strategy.ChooseStock.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.ChooseStock.new = function () {
    return new Strategy.ChooseStock();
}
Strategy.ChooseStock.create = function (is) {
    return Strategy.ChooseStock._readFrom(is);
}

Strategy.TopStock = function() {
    this.stockCode = "";
    this.stockName = "";
    this.market = 0;
    this.chooseDate = "";
    this.maxRise = 0;
    this.nextDayRise = 0;
    this.stgyCode = "";
    this.stgyName = "";
    this.stgyCategory = Strategy.StgyCategory.Recommend;
    this._classname = "Strategy.TopStock";
};
Strategy.TopStock.prototype = new TafStream.JceStruct();
Strategy.TopStock._classname = "Strategy.TopStock";

Strategy.TopStock._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.TopStock._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.TopStock._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.TopStock();
    tmp.stockCode = is.readString(0, true, "");
    tmp.stockName = is.readString(1, true, "");
    tmp.market = is.readInt32(2, true, 0);
    tmp.chooseDate = is.readString(3, false, "");
    tmp.maxRise = is.readDouble(4, false, 0);
    tmp.nextDayRise = is.readDouble(5, false, 0);
    tmp.stgyCode = is.readString(6, false, "");
    tmp.stgyName = is.readString(7, false, "");
    tmp.stgyCategory = is.readInt32(8, false, Strategy.StgyCategory.Recommend);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.TopStock.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.stockCode);
    os.writeString(1, this.stockName);
    os.writeInt32(2, this.market);
    if (this.chooseDate != undefined && this.chooseDate != "") {
        os.writeString(3, this.chooseDate);
    }
    if (this.maxRise != undefined && this.maxRise != 0) {
        os.writeDouble(4, this.maxRise);
    }
    if (this.nextDayRise != undefined && this.nextDayRise != 0) {
        os.writeDouble(5, this.nextDayRise);
    }
    if (this.stgyCode != undefined && this.stgyCode != "") {
        os.writeString(6, this.stgyCode);
    }
    if (this.stgyName != undefined && this.stgyName != "") {
        os.writeString(7, this.stgyName);
    }
    os.writeInt32(8, this.stgyCategory);
    os.resumePrecision && os.resumePrecision();
};
Strategy.TopStock.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.TopStock.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.TopStock.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockCode = this.stockCode;
    tmp.stockName = this.stockName;
    tmp.market = this.market;
    tmp.chooseDate = this.chooseDate;
    tmp.maxRise = this.maxRise;
    tmp.nextDayRise = this.nextDayRise;
    tmp.stgyCode = this.stgyCode;
    tmp.stgyName = this.stgyName;
    tmp.stgyCategory = this.stgyCategory;
    
    return tmp;
}
Strategy.TopStock.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockCode") || (this.stockCode = json.stockCode);
    !json.hasOwnProperty("stockName") || (this.stockName = json.stockName);
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("chooseDate") || (this.chooseDate = json.chooseDate);
    !json.hasOwnProperty("maxRise") || (this.maxRise = json.maxRise);
    !json.hasOwnProperty("nextDayRise") || (this.nextDayRise = json.nextDayRise);
    !json.hasOwnProperty("stgyCode") || (this.stgyCode = json.stgyCode);
    !json.hasOwnProperty("stgyName") || (this.stgyName = json.stgyName);
    !json.hasOwnProperty("stgyCategory") || (this.stgyCategory = json.stgyCategory);
}
Strategy.TopStock.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.TopStock.new = function () {
    return new Strategy.TopStock();
}
Strategy.TopStock.create = function (is) {
    return Strategy.TopStock._readFrom(is);
}

Strategy.OptiStock = function() {
    this.stockCode = "";
    this.stockName = "";
    this.market = 0;
    this.chooseDate = "";
    this.flag = 0;
    this.highIncrease = 0;
    this.nextIncrease = 0;
    this.fiveDayIncrease = 0;
    this.tenDayIncrease = 0;
    this._classname = "Strategy.OptiStock";
};
Strategy.OptiStock.prototype = new TafStream.JceStruct();
Strategy.OptiStock._classname = "Strategy.OptiStock";

Strategy.OptiStock._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.OptiStock._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.OptiStock._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.OptiStock();
    tmp.stockCode = is.readString(0, true, "");
    tmp.stockName = is.readString(1, true, "");
    tmp.market = is.readInt32(2, true, 0);
    tmp.chooseDate = is.readString(3, false, "");
    tmp.flag = is.readInt32(4, false, 0);
    tmp.highIncrease = is.readDouble(5, false, 0);
    tmp.nextIncrease = is.readDouble(6, false, 0);
    tmp.fiveDayIncrease = is.readDouble(7, false, 0);
    tmp.tenDayIncrease = is.readDouble(8, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.OptiStock.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.stockCode);
    os.writeString(1, this.stockName);
    os.writeInt32(2, this.market);
    if (this.chooseDate != undefined && this.chooseDate != "") {
        os.writeString(3, this.chooseDate);
    }
    if (this.flag != undefined && this.flag != 0) {
        os.writeInt32(4, this.flag);
    }
    if (this.highIncrease != undefined && this.highIncrease != 0) {
        os.writeDouble(5, this.highIncrease);
    }
    if (this.nextIncrease != undefined && this.nextIncrease != 0) {
        os.writeDouble(6, this.nextIncrease);
    }
    if (this.fiveDayIncrease != undefined && this.fiveDayIncrease != 0) {
        os.writeDouble(7, this.fiveDayIncrease);
    }
    if (this.tenDayIncrease != undefined && this.tenDayIncrease != 0) {
        os.writeDouble(8, this.tenDayIncrease);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.OptiStock.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.OptiStock.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.OptiStock.prototype.toObject = function() { 
    var tmp = {};

    tmp.stockCode = this.stockCode;
    tmp.stockName = this.stockName;
    tmp.market = this.market;
    tmp.chooseDate = this.chooseDate;
    tmp.flag = this.flag;
    tmp.highIncrease = this.highIncrease;
    tmp.nextIncrease = this.nextIncrease;
    tmp.fiveDayIncrease = this.fiveDayIncrease;
    tmp.tenDayIncrease = this.tenDayIncrease;
    
    return tmp;
}
Strategy.OptiStock.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stockCode") || (this.stockCode = json.stockCode);
    !json.hasOwnProperty("stockName") || (this.stockName = json.stockName);
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("chooseDate") || (this.chooseDate = json.chooseDate);
    !json.hasOwnProperty("flag") || (this.flag = json.flag);
    !json.hasOwnProperty("highIncrease") || (this.highIncrease = json.highIncrease);
    !json.hasOwnProperty("nextIncrease") || (this.nextIncrease = json.nextIncrease);
    !json.hasOwnProperty("fiveDayIncrease") || (this.fiveDayIncrease = json.fiveDayIncrease);
    !json.hasOwnProperty("tenDayIncrease") || (this.tenDayIncrease = json.tenDayIncrease);
}
Strategy.OptiStock.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.OptiStock.new = function () {
    return new Strategy.OptiStock();
}
Strategy.OptiStock.create = function (is) {
    return Strategy.OptiStock._readFrom(is);
}

Strategy.StgyInfoRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.stgyInfoList = new TafStream.List(Strategy.StgyInfo);
    this._classname = "Strategy.StgyInfoRsp";
};
Strategy.StgyInfoRsp.prototype = new TafStream.JceStruct();
Strategy.StgyInfoRsp._classname = "Strategy.StgyInfoRsp";

Strategy.StgyInfoRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StgyInfoRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StgyInfoRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StgyInfoRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, false, "");
    tmp.stgyInfoList = is.readList(2, false, TafStream.List(Strategy.StgyInfo));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StgyInfoRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    if (this.iMsg != undefined && this.iMsg != "") {
        os.writeString(1, this.iMsg);
    }
    if (this.stgyInfoList != undefined && this.stgyInfoList.length > 0) {
        os.writeList(2, this.stgyInfoList);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.StgyInfoRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StgyInfoRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StgyInfoRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.stgyInfoList = this.stgyInfoList.toObject();
    
    return tmp;
}
Strategy.StgyInfoRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("stgyInfoList") || (this.stgyInfoList.readFromObject(json.stgyInfoList));
}
Strategy.StgyInfoRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StgyInfoRsp.new = function () {
    return new Strategy.StgyInfoRsp();
}
Strategy.StgyInfoRsp.create = function (is) {
    return Strategy.StgyInfoRsp._readFrom(is);
}

Strategy.ChooseStockReq = function() {
    this.stgyCode = "";
    this.chooseDate = "";
    this._classname = "Strategy.ChooseStockReq";
};
Strategy.ChooseStockReq.prototype = new TafStream.JceStruct();
Strategy.ChooseStockReq._classname = "Strategy.ChooseStockReq";

Strategy.ChooseStockReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.ChooseStockReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.ChooseStockReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.ChooseStockReq();
    tmp.stgyCode = is.readString(0, true, "");
    tmp.chooseDate = is.readString(1, true, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.ChooseStockReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.stgyCode);
    os.writeString(1, this.chooseDate);
    os.resumePrecision && os.resumePrecision();
};
Strategy.ChooseStockReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.ChooseStockReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.ChooseStockReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.stgyCode = this.stgyCode;
    tmp.chooseDate = this.chooseDate;
    
    return tmp;
}
Strategy.ChooseStockReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("stgyCode") || (this.stgyCode = json.stgyCode);
    !json.hasOwnProperty("chooseDate") || (this.chooseDate = json.chooseDate);
}
Strategy.ChooseStockReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.ChooseStockReq.new = function () {
    return new Strategy.ChooseStockReq();
}
Strategy.ChooseStockReq.create = function (is) {
    return Strategy.ChooseStockReq._readFrom(is);
}

Strategy.ChooseStockRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.chooseStockList = new TafStream.List(Strategy.ChooseStock);
    this._classname = "Strategy.ChooseStockRsp";
};
Strategy.ChooseStockRsp.prototype = new TafStream.JceStruct();
Strategy.ChooseStockRsp._classname = "Strategy.ChooseStockRsp";

Strategy.ChooseStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.ChooseStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.ChooseStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.ChooseStockRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, false, "");
    tmp.chooseStockList = is.readList(2, false, TafStream.List(Strategy.ChooseStock));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.ChooseStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    if (this.iMsg != undefined && this.iMsg != "") {
        os.writeString(1, this.iMsg);
    }
    if (this.chooseStockList != undefined && this.chooseStockList.length > 0) {
        os.writeList(2, this.chooseStockList);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.ChooseStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.ChooseStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.ChooseStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.chooseStockList = this.chooseStockList.toObject();
    
    return tmp;
}
Strategy.ChooseStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("chooseStockList") || (this.chooseStockList.readFromObject(json.chooseStockList));
}
Strategy.ChooseStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.ChooseStockRsp.new = function () {
    return new Strategy.ChooseStockRsp();
}
Strategy.ChooseStockRsp.create = function (is) {
    return Strategy.ChooseStockRsp._readFrom(is);
}

Strategy.TopStockRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.topStockList = new TafStream.List(Strategy.TopStock);
    this._classname = "Strategy.TopStockRsp";
};
Strategy.TopStockRsp.prototype = new TafStream.JceStruct();
Strategy.TopStockRsp._classname = "Strategy.TopStockRsp";

Strategy.TopStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.TopStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.TopStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.TopStockRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, false, "");
    tmp.topStockList = is.readList(2, false, TafStream.List(Strategy.TopStock));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.TopStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    if (this.iMsg != undefined && this.iMsg != "") {
        os.writeString(1, this.iMsg);
    }
    if (this.topStockList != undefined && this.topStockList.length > 0) {
        os.writeList(2, this.topStockList);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.TopStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.TopStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.TopStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.topStockList = this.topStockList.toObject();
    
    return tmp;
}
Strategy.TopStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("topStockList") || (this.topStockList.readFromObject(json.topStockList));
}
Strategy.TopStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.TopStockRsp.new = function () {
    return new Strategy.TopStockRsp();
}
Strategy.TopStockRsp.create = function (is) {
    return Strategy.TopStockRsp._readFrom(is);
}

Strategy.OptiStockRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.optiStockList = new TafStream.List(Strategy.OptiStock);
    this._classname = "Strategy.OptiStockRsp";
};
Strategy.OptiStockRsp.prototype = new TafStream.JceStruct();
Strategy.OptiStockRsp._classname = "Strategy.OptiStockRsp";

Strategy.OptiStockRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.OptiStockRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.OptiStockRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.OptiStockRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, false, "");
    tmp.optiStockList = is.readList(2, false, TafStream.List(Strategy.OptiStock));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.OptiStockRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    if (this.iMsg != undefined && this.iMsg != "") {
        os.writeString(1, this.iMsg);
    }
    if (this.optiStockList != undefined && this.optiStockList.length > 0) {
        os.writeList(2, this.optiStockList);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.OptiStockRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.OptiStockRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.OptiStockRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.optiStockList = this.optiStockList.toObject();
    
    return tmp;
}
Strategy.OptiStockRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("optiStockList") || (this.optiStockList.readFromObject(json.optiStockList));
}
Strategy.OptiStockRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.OptiStockRsp.new = function () {
    return new Strategy.OptiStockRsp();
}
Strategy.OptiStockRsp.create = function (is) {
    return Strategy.OptiStockRsp._readFrom(is);
}

Strategy.StockStar = function() {
    this.code = "";
    this.name = "";
    this.market = 0;
    this.price = 0;
    this.zdf = 0;
    this.starLevel = 0;
    this.industry = "";
    this._classname = "Strategy.StockStar";
};
Strategy.StockStar.prototype = new TafStream.JceStruct();
Strategy.StockStar._classname = "Strategy.StockStar";

Strategy.StockStar._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockStar._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockStar._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockStar();
    tmp.code = is.readString(0, true, "");
    tmp.name = is.readString(1, true, "");
    tmp.market = is.readInt32(2, true, 0);
    tmp.price = is.readDouble(3, false, 0);
    tmp.zdf = is.readDouble(4, false, 0);
    tmp.starLevel = is.readInt32(5, false, 0);
    tmp.industry = is.readString(6, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockStar.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.code);
    os.writeString(1, this.name);
    os.writeInt32(2, this.market);
    if (this.price != undefined && this.price != 0) {
        os.writeDouble(3, this.price);
    }
    if (this.zdf != undefined && this.zdf != 0) {
        os.writeDouble(4, this.zdf);
    }
    if (this.starLevel != undefined && this.starLevel != 0) {
        os.writeInt32(5, this.starLevel);
    }
    if (this.industry != undefined && this.industry != "") {
        os.writeString(6, this.industry);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockStar.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockStar.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockStar.prototype.toObject = function() { 
    var tmp = {};

    tmp.code = this.code;
    tmp.name = this.name;
    tmp.market = this.market;
    tmp.price = this.price;
    tmp.zdf = this.zdf;
    tmp.starLevel = this.starLevel;
    tmp.industry = this.industry;
    
    return tmp;
}
Strategy.StockStar.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("code") || (this.code = json.code);
    !json.hasOwnProperty("name") || (this.name = json.name);
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("price") || (this.price = json.price);
    !json.hasOwnProperty("zdf") || (this.zdf = json.zdf);
    !json.hasOwnProperty("starLevel") || (this.starLevel = json.starLevel);
    !json.hasOwnProperty("industry") || (this.industry = json.industry);
}
Strategy.StockStar.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockStar.new = function () {
    return new Strategy.StockStar();
}
Strategy.StockStar.create = function (is) {
    return Strategy.StockStar._readFrom(is);
}

Strategy.StockStarReq = function() {
    this.type = 0;
    this._classname = "Strategy.StockStarReq";
};
Strategy.StockStarReq.prototype = new TafStream.JceStruct();
Strategy.StockStarReq._classname = "Strategy.StockStarReq";

Strategy.StockStarReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockStarReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockStarReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockStarReq();
    tmp.type = is.readInt32(0, true, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockStarReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.type);
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockStarReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockStarReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockStarReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.type = this.type;
    
    return tmp;
}
Strategy.StockStarReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("type") || (this.type = json.type);
}
Strategy.StockStarReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockStarReq.new = function () {
    return new Strategy.StockStarReq();
}
Strategy.StockStarReq.create = function (is) {
    return Strategy.StockStarReq._readFrom(is);
}

Strategy.StockStarRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.stockStarList = new TafStream.List(Strategy.StockStar);
    this._classname = "Strategy.StockStarRsp";
};
Strategy.StockStarRsp.prototype = new TafStream.JceStruct();
Strategy.StockStarRsp._classname = "Strategy.StockStarRsp";

Strategy.StockStarRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockStarRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockStarRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockStarRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, false, "");
    tmp.stockStarList = is.readList(2, false, TafStream.List(Strategy.StockStar));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockStarRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    if (this.iMsg != undefined && this.iMsg != "") {
        os.writeString(1, this.iMsg);
    }
    if (this.stockStarList != undefined && this.stockStarList.length > 0) {
        os.writeList(2, this.stockStarList);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockStarRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockStarRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockStarRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.stockStarList = this.stockStarList.toObject();
    
    return tmp;
}
Strategy.StockStarRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("stockStarList") || (this.stockStarList.readFromObject(json.stockStarList));
}
Strategy.StockStarRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockStarRsp.new = function () {
    return new Strategy.StockStarRsp();
}
Strategy.StockStarRsp.create = function (is) {
    return Strategy.StockStarRsp._readFrom(is);
}

Strategy.StockPredict = function() {
    this.upprob = 0;
    this.flucFlor = 0;
    this.flucCeil = 0;
    this.flucPrice = 0;
    this.upprob5 = 0;
    this.flucFlor5 = 0;
    this.flucCeil5 = 0;
    this.flucPrice5 = 0;
    this.upprob10 = 0;
    this.flucFlor10 = 0;
    this.flucCeil10 = 0;
    this.flucPrice10 = 0;
    this.upprob20 = 0;
    this.flucFlor20 = 0;
    this.flucCeil20 = 0;
    this.flucPrice20 = 0;
    this._classname = "Strategy.StockPredict";
};
Strategy.StockPredict.prototype = new TafStream.JceStruct();
Strategy.StockPredict._classname = "Strategy.StockPredict";

Strategy.StockPredict._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockPredict._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockPredict._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockPredict();
    tmp.upprob = is.readDouble(0, false, 0);
    tmp.flucFlor = is.readDouble(1, false, 0);
    tmp.flucCeil = is.readDouble(2, false, 0);
    tmp.flucPrice = is.readDouble(3, false, 0);
    tmp.upprob5 = is.readDouble(4, false, 0);
    tmp.flucFlor5 = is.readDouble(5, false, 0);
    tmp.flucCeil5 = is.readDouble(6, false, 0);
    tmp.flucPrice5 = is.readDouble(7, false, 0);
    tmp.upprob10 = is.readDouble(8, false, 0);
    tmp.flucFlor10 = is.readDouble(9, false, 0);
    tmp.flucCeil10 = is.readDouble(10, false, 0);
    tmp.flucPrice10 = is.readDouble(11, false, 0);
    tmp.upprob20 = is.readDouble(12, false, 0);
    tmp.flucFlor20 = is.readDouble(13, false, 0);
    tmp.flucCeil20 = is.readDouble(14, false, 0);
    tmp.flucPrice20 = is.readDouble(15, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockPredict.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.upprob != undefined && this.upprob != 0) {
        os.writeDouble(0, this.upprob);
    }
    if (this.flucFlor != undefined && this.flucFlor != 0) {
        os.writeDouble(1, this.flucFlor);
    }
    if (this.flucCeil != undefined && this.flucCeil != 0) {
        os.writeDouble(2, this.flucCeil);
    }
    if (this.flucPrice != undefined && this.flucPrice != 0) {
        os.writeDouble(3, this.flucPrice);
    }
    if (this.upprob5 != undefined && this.upprob5 != 0) {
        os.writeDouble(4, this.upprob5);
    }
    if (this.flucFlor5 != undefined && this.flucFlor5 != 0) {
        os.writeDouble(5, this.flucFlor5);
    }
    if (this.flucCeil5 != undefined && this.flucCeil5 != 0) {
        os.writeDouble(6, this.flucCeil5);
    }
    if (this.flucPrice5 != undefined && this.flucPrice5 != 0) {
        os.writeDouble(7, this.flucPrice5);
    }
    if (this.upprob10 != undefined && this.upprob10 != 0) {
        os.writeDouble(8, this.upprob10);
    }
    if (this.flucFlor10 != undefined && this.flucFlor10 != 0) {
        os.writeDouble(9, this.flucFlor10);
    }
    if (this.flucCeil10 != undefined && this.flucCeil10 != 0) {
        os.writeDouble(10, this.flucCeil10);
    }
    if (this.flucPrice10 != undefined && this.flucPrice10 != 0) {
        os.writeDouble(11, this.flucPrice10);
    }
    if (this.upprob20 != undefined && this.upprob20 != 0) {
        os.writeDouble(12, this.upprob20);
    }
    if (this.flucFlor20 != undefined && this.flucFlor20 != 0) {
        os.writeDouble(13, this.flucFlor20);
    }
    if (this.flucCeil20 != undefined && this.flucCeil20 != 0) {
        os.writeDouble(14, this.flucCeil20);
    }
    if (this.flucPrice20 != undefined && this.flucPrice20 != 0) {
        os.writeDouble(15, this.flucPrice20);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockPredict.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockPredict.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockPredict.prototype.toObject = function() { 
    var tmp = {};

    tmp.upprob = this.upprob;
    tmp.flucFlor = this.flucFlor;
    tmp.flucCeil = this.flucCeil;
    tmp.flucPrice = this.flucPrice;
    tmp.upprob5 = this.upprob5;
    tmp.flucFlor5 = this.flucFlor5;
    tmp.flucCeil5 = this.flucCeil5;
    tmp.flucPrice5 = this.flucPrice5;
    tmp.upprob10 = this.upprob10;
    tmp.flucFlor10 = this.flucFlor10;
    tmp.flucCeil10 = this.flucCeil10;
    tmp.flucPrice10 = this.flucPrice10;
    tmp.upprob20 = this.upprob20;
    tmp.flucFlor20 = this.flucFlor20;
    tmp.flucCeil20 = this.flucCeil20;
    tmp.flucPrice20 = this.flucPrice20;
    
    return tmp;
}
Strategy.StockPredict.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("upprob") || (this.upprob = json.upprob);
    !json.hasOwnProperty("flucFlor") || (this.flucFlor = json.flucFlor);
    !json.hasOwnProperty("flucCeil") || (this.flucCeil = json.flucCeil);
    !json.hasOwnProperty("flucPrice") || (this.flucPrice = json.flucPrice);
    !json.hasOwnProperty("upprob5") || (this.upprob5 = json.upprob5);
    !json.hasOwnProperty("flucFlor5") || (this.flucFlor5 = json.flucFlor5);
    !json.hasOwnProperty("flucCeil5") || (this.flucCeil5 = json.flucCeil5);
    !json.hasOwnProperty("flucPrice5") || (this.flucPrice5 = json.flucPrice5);
    !json.hasOwnProperty("upprob10") || (this.upprob10 = json.upprob10);
    !json.hasOwnProperty("flucFlor10") || (this.flucFlor10 = json.flucFlor10);
    !json.hasOwnProperty("flucCeil10") || (this.flucCeil10 = json.flucCeil10);
    !json.hasOwnProperty("flucPrice10") || (this.flucPrice10 = json.flucPrice10);
    !json.hasOwnProperty("upprob20") || (this.upprob20 = json.upprob20);
    !json.hasOwnProperty("flucFlor20") || (this.flucFlor20 = json.flucFlor20);
    !json.hasOwnProperty("flucCeil20") || (this.flucCeil20 = json.flucCeil20);
    !json.hasOwnProperty("flucPrice20") || (this.flucPrice20 = json.flucPrice20);
}
Strategy.StockPredict.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockPredict.new = function () {
    return new Strategy.StockPredict();
}
Strategy.StockPredict.create = function (is) {
    return Strategy.StockPredict._readFrom(is);
}

Strategy.StockDiagnosis = function() {
    this.code = "";
    this.name = "";
    this.market = 0;
    this.price = 0;
    this.zd = 0;
    this.zdf = 0;
    this.starLevel = 0;
    this.shortRec = "";
    this.midLongRec = "";
    this.priceDisFac = "";
    this.priceMacFac = "";
    this.amountDisFac = "";
    this.amountMacFac = "";
    this.financeDisFac = "";
    this.financeMacFac = "";
    this.valueDisFac = "";
    this.valueMacFac = "";
    this.dealDisFac = "";
    this.dealMacFac = "";
    this.stockPredict = new Strategy.StockPredict();
    this.level = 0;
    this.todayHot = 0;
    this.yesterdayHot = 0;
    this.dealStatus = 0;
    this.ss = 0;
    this.bon = 0;
    this.ion = 0;
    this.non = 0;
    this.ron = 0;
    this.son = 0;
    this.on = 0;
    this.zlBuy = 0;
    this.zlSell = 0;
    this.zlNavBuy = 0;
    this.zlPer = 0;
    this.shBuy = 0;
    this.shSell = 0;
    this.shNavBuy = 0;
    this.shPer = 0;
    this.lowPrice = 0;
    this.highPrice = 0;
    this.trend = 0;
    this._classname = "Strategy.StockDiagnosis";
};
Strategy.StockDiagnosis.prototype = new TafStream.JceStruct();
Strategy.StockDiagnosis._classname = "Strategy.StockDiagnosis";

Strategy.StockDiagnosis._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockDiagnosis._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockDiagnosis._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockDiagnosis();
    tmp.code = is.readString(0, true, "");
    tmp.name = is.readString(1, true, "");
    tmp.market = is.readInt32(2, true, 0);
    tmp.price = is.readDouble(3, false, 0);
    tmp.zd = is.readDouble(4, false, 0);
    tmp.zdf = is.readDouble(5, false, 0);
    tmp.starLevel = is.readInt32(6, false, 0);
    tmp.shortRec = is.readString(7, false, "");
    tmp.midLongRec = is.readString(8, false, "");
    tmp.priceDisFac = is.readString(9, false, "");
    tmp.priceMacFac = is.readString(10, false, "");
    tmp.amountDisFac = is.readString(11, false, "");
    tmp.amountMacFac = is.readString(12, false, "");
    tmp.financeDisFac = is.readString(13, false, "");
    tmp.financeMacFac = is.readString(14, false, "");
    tmp.valueDisFac = is.readString(15, false, "");
    tmp.valueMacFac = is.readString(16, false, "");
    tmp.dealDisFac = is.readString(17, false, "");
    tmp.dealMacFac = is.readString(18, false, "");
    tmp.stockPredict = is.readStruct(19, false, Strategy.StockPredict);
    tmp.level = is.readInt32(20, false, 0);
    tmp.todayHot = is.readDouble(21, false, 0);
    tmp.yesterdayHot = is.readDouble(22, false, 0);
    tmp.dealStatus = is.readInt32(23, false, 0);
    tmp.ss = is.readDouble(24, false, 0);
    tmp.bon = is.readInt32(25, false, 0);
    tmp.ion = is.readInt32(26, false, 0);
    tmp.non = is.readInt32(27, false, 0);
    tmp.ron = is.readInt32(28, false, 0);
    tmp.son = is.readInt32(29, false, 0);
    tmp.on = is.readInt32(30, false, 0);
    tmp.zlBuy = is.readDouble(31, false, 0);
    tmp.zlSell = is.readDouble(32, false, 0);
    tmp.zlNavBuy = is.readDouble(33, false, 0);
    tmp.zlPer = is.readDouble(34, false, 0);
    tmp.shBuy = is.readDouble(35, false, 0);
    tmp.shSell = is.readDouble(36, false, 0);
    tmp.shNavBuy = is.readDouble(37, false, 0);
    tmp.shPer = is.readDouble(38, false, 0);
    tmp.lowPrice = is.readDouble(39, false, 0);
    tmp.highPrice = is.readDouble(40, false, 0);
    tmp.trend = is.readDouble(41, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockDiagnosis.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.code);
    os.writeString(1, this.name);
    os.writeInt32(2, this.market);
    if (this.price != undefined && this.price != 0) {
        os.writeDouble(3, this.price);
    }
    if (this.zd != undefined && this.zd != 0) {
        os.writeDouble(4, this.zd);
    }
    if (this.zdf != undefined && this.zdf != 0) {
        os.writeDouble(5, this.zdf);
    }
    if (this.starLevel != undefined && this.starLevel != 0) {
        os.writeInt32(6, this.starLevel);
    }
    if (this.shortRec != undefined && this.shortRec != "") {
        os.writeString(7, this.shortRec);
    }
    if (this.midLongRec != undefined && this.midLongRec != "") {
        os.writeString(8, this.midLongRec);
    }
    if (this.priceDisFac != undefined && this.priceDisFac != "") {
        os.writeString(9, this.priceDisFac);
    }
    if (this.priceMacFac != undefined && this.priceMacFac != "") {
        os.writeString(10, this.priceMacFac);
    }
    if (this.amountDisFac != undefined && this.amountDisFac != "") {
        os.writeString(11, this.amountDisFac);
    }
    if (this.amountMacFac != undefined && this.amountMacFac != "") {
        os.writeString(12, this.amountMacFac);
    }
    if (this.financeDisFac != undefined && this.financeDisFac != "") {
        os.writeString(13, this.financeDisFac);
    }
    if (this.financeMacFac != undefined && this.financeMacFac != "") {
        os.writeString(14, this.financeMacFac);
    }
    if (this.valueDisFac != undefined && this.valueDisFac != "") {
        os.writeString(15, this.valueDisFac);
    }
    if (this.valueMacFac != undefined && this.valueMacFac != "") {
        os.writeString(16, this.valueMacFac);
    }
    if (this.dealDisFac != undefined && this.dealDisFac != "") {
        os.writeString(17, this.dealDisFac);
    }
    if (this.dealMacFac != undefined && this.dealMacFac != "") {
        os.writeString(18, this.dealMacFac);
    }
    os.writeStruct(19, this.stockPredict);
    if (this.level != undefined && this.level != 0) {
        os.writeInt32(20, this.level);
    }
    if (this.todayHot != undefined && this.todayHot != 0) {
        os.writeDouble(21, this.todayHot);
    }
    if (this.yesterdayHot != undefined && this.yesterdayHot != 0) {
        os.writeDouble(22, this.yesterdayHot);
    }
    if (this.dealStatus != undefined && this.dealStatus != 0) {
        os.writeInt32(23, this.dealStatus);
    }
    if (this.ss != undefined && this.ss != 0) {
        os.writeDouble(24, this.ss);
    }
    if (this.bon != undefined && this.bon != 0) {
        os.writeInt32(25, this.bon);
    }
    if (this.ion != undefined && this.ion != 0) {
        os.writeInt32(26, this.ion);
    }
    if (this.non != undefined && this.non != 0) {
        os.writeInt32(27, this.non);
    }
    if (this.ron != undefined && this.ron != 0) {
        os.writeInt32(28, this.ron);
    }
    if (this.son != undefined && this.son != 0) {
        os.writeInt32(29, this.son);
    }
    if (this.on != undefined && this.on != 0) {
        os.writeInt32(30, this.on);
    }
    if (this.zlBuy != undefined && this.zlBuy != 0) {
        os.writeDouble(31, this.zlBuy);
    }
    if (this.zlSell != undefined && this.zlSell != 0) {
        os.writeDouble(32, this.zlSell);
    }
    if (this.zlNavBuy != undefined && this.zlNavBuy != 0) {
        os.writeDouble(33, this.zlNavBuy);
    }
    if (this.zlPer != undefined && this.zlPer != 0) {
        os.writeDouble(34, this.zlPer);
    }
    if (this.shBuy != undefined && this.shBuy != 0) {
        os.writeDouble(35, this.shBuy);
    }
    if (this.shSell != undefined && this.shSell != 0) {
        os.writeDouble(36, this.shSell);
    }
    if (this.shNavBuy != undefined && this.shNavBuy != 0) {
        os.writeDouble(37, this.shNavBuy);
    }
    if (this.shPer != undefined && this.shPer != 0) {
        os.writeDouble(38, this.shPer);
    }
    if (this.lowPrice != undefined && this.lowPrice != 0) {
        os.writeDouble(39, this.lowPrice);
    }
    if (this.highPrice != undefined && this.highPrice != 0) {
        os.writeDouble(40, this.highPrice);
    }
    if (this.trend != undefined && this.trend != 0) {
        os.writeDouble(41, this.trend);
    }
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockDiagnosis.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockDiagnosis.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockDiagnosis.prototype.toObject = function() { 
    var tmp = {};

    tmp.code = this.code;
    tmp.name = this.name;
    tmp.market = this.market;
    tmp.price = this.price;
    tmp.zd = this.zd;
    tmp.zdf = this.zdf;
    tmp.starLevel = this.starLevel;
    tmp.shortRec = this.shortRec;
    tmp.midLongRec = this.midLongRec;
    tmp.priceDisFac = this.priceDisFac;
    tmp.priceMacFac = this.priceMacFac;
    tmp.amountDisFac = this.amountDisFac;
    tmp.amountMacFac = this.amountMacFac;
    tmp.financeDisFac = this.financeDisFac;
    tmp.financeMacFac = this.financeMacFac;
    tmp.valueDisFac = this.valueDisFac;
    tmp.valueMacFac = this.valueMacFac;
    tmp.dealDisFac = this.dealDisFac;
    tmp.dealMacFac = this.dealMacFac;
    tmp.stockPredict = this.stockPredict.toObject();
    tmp.level = this.level;
    tmp.todayHot = this.todayHot;
    tmp.yesterdayHot = this.yesterdayHot;
    tmp.dealStatus = this.dealStatus;
    tmp.ss = this.ss;
    tmp.bon = this.bon;
    tmp.ion = this.ion;
    tmp.non = this.non;
    tmp.ron = this.ron;
    tmp.son = this.son;
    tmp.on = this.on;
    tmp.zlBuy = this.zlBuy;
    tmp.zlSell = this.zlSell;
    tmp.zlNavBuy = this.zlNavBuy;
    tmp.zlPer = this.zlPer;
    tmp.shBuy = this.shBuy;
    tmp.shSell = this.shSell;
    tmp.shNavBuy = this.shNavBuy;
    tmp.shPer = this.shPer;
    tmp.lowPrice = this.lowPrice;
    tmp.highPrice = this.highPrice;
    tmp.trend = this.trend;
    
    return tmp;
}
Strategy.StockDiagnosis.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("code") || (this.code = json.code);
    !json.hasOwnProperty("name") || (this.name = json.name);
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("price") || (this.price = json.price);
    !json.hasOwnProperty("zd") || (this.zd = json.zd);
    !json.hasOwnProperty("zdf") || (this.zdf = json.zdf);
    !json.hasOwnProperty("starLevel") || (this.starLevel = json.starLevel);
    !json.hasOwnProperty("shortRec") || (this.shortRec = json.shortRec);
    !json.hasOwnProperty("midLongRec") || (this.midLongRec = json.midLongRec);
    !json.hasOwnProperty("priceDisFac") || (this.priceDisFac = json.priceDisFac);
    !json.hasOwnProperty("priceMacFac") || (this.priceMacFac = json.priceMacFac);
    !json.hasOwnProperty("amountDisFac") || (this.amountDisFac = json.amountDisFac);
    !json.hasOwnProperty("amountMacFac") || (this.amountMacFac = json.amountMacFac);
    !json.hasOwnProperty("financeDisFac") || (this.financeDisFac = json.financeDisFac);
    !json.hasOwnProperty("financeMacFac") || (this.financeMacFac = json.financeMacFac);
    !json.hasOwnProperty("valueDisFac") || (this.valueDisFac = json.valueDisFac);
    !json.hasOwnProperty("valueMacFac") || (this.valueMacFac = json.valueMacFac);
    !json.hasOwnProperty("dealDisFac") || (this.dealDisFac = json.dealDisFac);
    !json.hasOwnProperty("dealMacFac") || (this.dealMacFac = json.dealMacFac);
    !json.hasOwnProperty("stockPredict") || (this.stockPredict.readFromObject(json.stockPredict));
    !json.hasOwnProperty("level") || (this.level = json.level);
    !json.hasOwnProperty("todayHot") || (this.todayHot = json.todayHot);
    !json.hasOwnProperty("yesterdayHot") || (this.yesterdayHot = json.yesterdayHot);
    !json.hasOwnProperty("dealStatus") || (this.dealStatus = json.dealStatus);
    !json.hasOwnProperty("ss") || (this.ss = json.ss);
    !json.hasOwnProperty("bon") || (this.bon = json.bon);
    !json.hasOwnProperty("ion") || (this.ion = json.ion);
    !json.hasOwnProperty("non") || (this.non = json.non);
    !json.hasOwnProperty("ron") || (this.ron = json.ron);
    !json.hasOwnProperty("son") || (this.son = json.son);
    !json.hasOwnProperty("on") || (this.on = json.on);
    !json.hasOwnProperty("zlBuy") || (this.zlBuy = json.zlBuy);
    !json.hasOwnProperty("zlSell") || (this.zlSell = json.zlSell);
    !json.hasOwnProperty("zlNavBuy") || (this.zlNavBuy = json.zlNavBuy);
    !json.hasOwnProperty("zlPer") || (this.zlPer = json.zlPer);
    !json.hasOwnProperty("shBuy") || (this.shBuy = json.shBuy);
    !json.hasOwnProperty("shSell") || (this.shSell = json.shSell);
    !json.hasOwnProperty("shNavBuy") || (this.shNavBuy = json.shNavBuy);
    !json.hasOwnProperty("shPer") || (this.shPer = json.shPer);
    !json.hasOwnProperty("lowPrice") || (this.lowPrice = json.lowPrice);
    !json.hasOwnProperty("highPrice") || (this.highPrice = json.highPrice);
    !json.hasOwnProperty("trend") || (this.trend = json.trend);
}
Strategy.StockDiagnosis.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockDiagnosis.new = function () {
    return new Strategy.StockDiagnosis();
}
Strategy.StockDiagnosis.create = function (is) {
    return Strategy.StockDiagnosis._readFrom(is);
}

Strategy.StockDiagnosisReq = function() {
    this.code = "";
    this.market = 0;
    this._classname = "Strategy.StockDiagnosisReq";
};
Strategy.StockDiagnosisReq.prototype = new TafStream.JceStruct();
Strategy.StockDiagnosisReq._classname = "Strategy.StockDiagnosisReq";

Strategy.StockDiagnosisReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockDiagnosisReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockDiagnosisReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockDiagnosisReq();
    tmp.code = is.readString(0, true, "");
    tmp.market = is.readInt32(1, true, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockDiagnosisReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.code);
    os.writeInt32(1, this.market);
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockDiagnosisReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockDiagnosisReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockDiagnosisReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.code = this.code;
    tmp.market = this.market;
    
    return tmp;
}
Strategy.StockDiagnosisReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("code") || (this.code = json.code);
    !json.hasOwnProperty("market") || (this.market = json.market);
}
Strategy.StockDiagnosisReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockDiagnosisReq.new = function () {
    return new Strategy.StockDiagnosisReq();
}
Strategy.StockDiagnosisReq.create = function (is) {
    return Strategy.StockDiagnosisReq._readFrom(is);
}

Strategy.StockDiagnosisRsp = function() {
    this.iRet = 0;
    this.iMsg = "";
    this.stockDiagnosis = new Strategy.StockDiagnosis();
    this._classname = "Strategy.StockDiagnosisRsp";
};
Strategy.StockDiagnosisRsp.prototype = new TafStream.JceStruct();
Strategy.StockDiagnosisRsp._classname = "Strategy.StockDiagnosisRsp";

Strategy.StockDiagnosisRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Strategy.StockDiagnosisRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Strategy.StockDiagnosisRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Strategy.StockDiagnosisRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.iMsg = is.readString(1, false, "");
    tmp.stockDiagnosis = is.readStruct(2, false, Strategy.StockDiagnosis);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Strategy.StockDiagnosisRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    if (this.iMsg != undefined && this.iMsg != "") {
        os.writeString(1, this.iMsg);
    }
    os.writeStruct(2, this.stockDiagnosis);
    os.resumePrecision && os.resumePrecision();
};
Strategy.StockDiagnosisRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Strategy.StockDiagnosisRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Strategy.StockDiagnosisRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.iMsg = this.iMsg;
    tmp.stockDiagnosis = this.stockDiagnosis.toObject();
    
    return tmp;
}
Strategy.StockDiagnosisRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("iMsg") || (this.iMsg = json.iMsg);
    !json.hasOwnProperty("stockDiagnosis") || (this.stockDiagnosis.readFromObject(json.stockDiagnosis));
}
Strategy.StockDiagnosisRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Strategy.StockDiagnosisRsp.new = function () {
    return new Strategy.StockDiagnosisRsp();
}
Strategy.StockDiagnosisRsp.create = function (is) {
    return Strategy.StockDiagnosisRsp._readFrom(is);
}

Strategy.StrategyInterfImp = function () { 
    this._name   = undefined;
    this._worker = undefined;
}

Strategy.StrategyInterfImp.prototype.initialize = function () { 
    //TODO:
}

Strategy.StrategyInterfImp.prototype.onDispatch = function (current, FuncName, BinBuffer) { 
    switch (FuncName) {
        case 'getChooseStock' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var chooseStockReq = wup.readStruct("chooseStockReq", Strategy.ChooseStockReq);
                var chooseStockRsp = wup.readStruct("chooseStockRsp", Strategy.ChooseStockRsp, new Strategy.ChooseStockRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var chooseStockReq = is.readStruct(1, true, Strategy.ChooseStockReq);
                var chooseStockRsp = is.readStruct(2, false, Strategy.ChooseStockRsp);
            }
            current.sendResponse = function (_ret, chooseStockRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("chooseStockRsp", chooseStockRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, chooseStockRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getChooseStock(current, chooseStockReq, chooseStockRsp);

            return TafError.SUCCESS;
        }
        case 'getOptiStock' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var optiStockRsp = wup.readStruct("optiStockRsp", Strategy.OptiStockRsp, new Strategy.OptiStockRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var optiStockRsp = is.readStruct(1, false, Strategy.OptiStockRsp);
            }
            current.sendResponse = function (_ret, optiStockRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("optiStockRsp", optiStockRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(1, optiStockRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getOptiStock(current, optiStockRsp);

            return TafError.SUCCESS;
        }
        case 'getPerfectStock' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var topStockRsp = wup.readStruct("topStockRsp", Strategy.TopStockRsp, new Strategy.TopStockRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var topStockRsp = is.readStruct(1, false, Strategy.TopStockRsp);
            }
            current.sendResponse = function (_ret, topStockRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("topStockRsp", topStockRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(1, topStockRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getPerfectStock(current, topStockRsp);

            return TafError.SUCCESS;
        }
        case 'getStgyInfoList' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stgyCategory = wup.readInt32("stgyCategory");
                var stgyInfoRsp = wup.readStruct("stgyInfoRsp", Strategy.StgyInfoRsp, new Strategy.StgyInfoRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stgyCategory = is.readInt32(1, true);
                var stgyInfoRsp = is.readStruct(2, false, Strategy.StgyInfoRsp);
            }
            current.sendResponse = function (_ret, stgyInfoRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("stgyInfoRsp", stgyInfoRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, stgyInfoRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getStgyInfoList(current, stgyCategory, stgyInfoRsp);

            return TafError.SUCCESS;
        }
        case 'getStockDiagnosis' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stReq = wup.readStruct("stReq", Strategy.StockDiagnosisReq);
                var stRsp = wup.readStruct("stRsp", Strategy.StockDiagnosisRsp, new Strategy.StockDiagnosisRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stReq = is.readStruct(1, true, Strategy.StockDiagnosisReq);
                var stRsp = is.readStruct(2, false, Strategy.StockDiagnosisRsp);
            }
            current.sendResponse = function (_ret, stRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("stRsp", stRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, stRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getStockDiagnosis(current, stReq, stRsp);

            return TafError.SUCCESS;
        }
        case 'getStockStar' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stReq = wup.readStruct("stReq", Strategy.StockStarReq);
                var stRsp = wup.readStruct("stRsp", Strategy.StockStarRsp, new Strategy.StockStarRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stReq = is.readStruct(1, true, Strategy.StockStarReq);
                var stRsp = is.readStruct(2, false, Strategy.StockStarRsp);
            }
            current.sendResponse = function (_ret, stRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("stRsp", stRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, stRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getStockStar(current, stReq, stRsp);

            return TafError.SUCCESS;
        }
        case 'getTopStgyInfoList' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stgyInfoRsp = wup.readStruct("stgyInfoRsp", Strategy.StgyInfoRsp, new Strategy.StgyInfoRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stgyInfoRsp = is.readStruct(1, false, Strategy.StgyInfoRsp);
            }
            current.sendResponse = function (_ret, stgyInfoRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("stgyInfoRsp", stgyInfoRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(1, stgyInfoRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getTopStgyInfoList(current, stgyInfoRsp);

            return TafError.SUCCESS;
        }
        case 'getTopStock' : {
            if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                var wup = new TafStream.UniAttribute();
                wup.wupVersion = current.getRequestVersion();
                wup.decode(BinBuffer);
                var stgyCode = wup.readString("stgyCode");
                var topStockRsp = wup.readStruct("topStockRsp", Strategy.TopStockRsp, new Strategy.TopStockRsp());
            } else {
                var is = new TafStream.JceInputStream(BinBuffer);
                var stgyCode = is.readString(1, true);
                var topStockRsp = is.readStruct(2, false, Strategy.TopStockRsp);
            }
            current.sendResponse = function (_ret, topStockRsp) {
                if (current.getRequestVersion() === TafStream.Wup.WUP_VERSION) {
                    var wup = new TafStream.UniAttribute();
                    wup.wupVersion = current.getRequestVersion();
                    wup.writeInt32("", _ret);
                    wup.writeStruct("topStockRsp", topStockRsp);

                    current.doResponse(wup.encode());
                } else {
                    var os = new TafStream.JceOutputStream();
                    os.writeInt32(0, _ret);
                    os.writeStruct(2, topStockRsp);

                    current.doResponse(os.getBinBuffer());
                }
            }

            this.getTopStock(current, stgyCode, topStockRsp);

            return TafError.SUCCESS;
        }
    }
    return TafError.SERVER.FUNC_NOT_FOUND;
}

Strategy.StrategyInterfImp.prototype.getChooseStock = function (current, chooseStockReq, chooseStockRsp) {
    //TODO:
    assert.fail('getChooseStock function not implemented');
}

Strategy.StrategyInterfImp.prototype.getOptiStock = function (current, optiStockRsp) {
    //TODO:
    assert.fail('getOptiStock function not implemented');
}

Strategy.StrategyInterfImp.prototype.getPerfectStock = function (current, topStockRsp) {
    //TODO:
    assert.fail('getPerfectStock function not implemented');
}

Strategy.StrategyInterfImp.prototype.getStgyInfoList = function (current, stgyCategory, stgyInfoRsp) {
    //TODO:
    assert.fail('getStgyInfoList function not implemented');
}

Strategy.StrategyInterfImp.prototype.getStockDiagnosis = function (current, stReq, stRsp) {
    //TODO:
    assert.fail('getStockDiagnosis function not implemented');
}

Strategy.StrategyInterfImp.prototype.getStockStar = function (current, stReq, stRsp) {
    //TODO:
    assert.fail('getStockStar function not implemented');
}

Strategy.StrategyInterfImp.prototype.getTopStgyInfoList = function (current, stgyInfoRsp) {
    //TODO:
    assert.fail('getTopStgyInfoList function not implemented');
}

Strategy.StrategyInterfImp.prototype.getTopStock = function (current, stgyCode, topStockRsp) {
    //TODO:
    assert.fail('getTopStock function not implemented');
}





