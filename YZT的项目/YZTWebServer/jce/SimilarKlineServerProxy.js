// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 4.2.1 by TAF Team.
// Generated from `./SimilarKlineServer.jce'
// **********************************************************************

var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}

var Similar = Similar || {};
module.exports.Similar = Similar;

Similar.SimilarKlineProxy = function () {
    this._name   = undefined;
    this._worker = undefined;
}

Similar.SimilarKlineProxy.prototype.setTimeout = function (iTimeout) {
    this._worker.timeout = iTimeout;
}

Similar.SimilarKlineProxy.prototype.getTimeout = function ( ) {
    return this._worker.timeout;
}


Similar.Cycle = {
    OneDay : 1,
    FiveDay : 5,
    TenDay : 10,
    TwentyDay : 20
};
Similar.Cycle._write = function(os, tag, val) { return os.writeInt32(tag, val); }
Similar.Cycle._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
Similar.Category = {
    Nav : 1,
    HotStock : 2,
    HotNav : 3,
    TopTen : 4,
    AfterTen : 5
};
Similar.Category._write = function(os, tag, val) { return os.writeInt32(tag, val); }
Similar.Category._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }
Similar.Plate = {
    HS : 1,
    SH : 2,
    SZ : 3,
    ZXB : 4,
    CYB : 5
};
Similar.Plate._write = function(os, tag, val) { return os.writeInt32(tag, val); }
Similar.Plate._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

Similar.ChartData = function() {
    this.high = 0;
    this.low = 0;
    this.open = 0;
    this.close = 0;
    this.ceil = 0;
    this.flor = 0;
    this.profit = 0;
    this.upProb = 0;
    this.ratio = 0;
    this.date = 0;
    this.volume = 0;
    this._classname = "Similar.ChartData";
};
Similar.ChartData.prototype = new TafStream.JceStruct();
Similar.ChartData._classname = "Similar.ChartData";

Similar.ChartData._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.ChartData._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.ChartData._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.ChartData();
    tmp.high = is.readInt32(0, false, 0);
    tmp.low = is.readInt32(1, false, 0);
    tmp.open = is.readInt32(2, false, 0);
    tmp.close = is.readInt32(3, false, 0);
    tmp.ceil = is.readInt32(4, false, 0);
    tmp.flor = is.readInt32(5, false, 0);
    tmp.profit = is.readInt32(6, false, 0);
    tmp.upProb = is.readInt32(7, false, 0);
    tmp.ratio = is.readInt32(8, false, 0);
    tmp.date = is.readInt32(9, true, 0);
    tmp.volume = is.readDouble(10, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.ChartData.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.high != undefined && this.high != 0) {
        os.writeInt32(0, this.high);
    }
    if (this.low != undefined && this.low != 0) {
        os.writeInt32(1, this.low);
    }
    if (this.open != undefined && this.open != 0) {
        os.writeInt32(2, this.open);
    }
    if (this.close != undefined && this.close != 0) {
        os.writeInt32(3, this.close);
    }
    if (this.ceil != undefined && this.ceil != 0) {
        os.writeInt32(4, this.ceil);
    }
    if (this.flor != undefined && this.flor != 0) {
        os.writeInt32(5, this.flor);
    }
    if (this.profit != undefined && this.profit != 0) {
        os.writeInt32(6, this.profit);
    }
    if (this.upProb != undefined && this.upProb != 0) {
        os.writeInt32(7, this.upProb);
    }
    if (this.ratio != undefined && this.ratio != 0) {
        os.writeInt32(8, this.ratio);
    }
    os.writeInt32(9, this.date);
    if (this.volume != undefined && this.volume != 0) {
        os.writeDouble(10, this.volume);
    }
    os.resumePrecision && os.resumePrecision();
};
Similar.ChartData.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.ChartData.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.ChartData.prototype.toObject = function() { 
    var tmp = {};

    tmp.high = this.high;
    tmp.low = this.low;
    tmp.open = this.open;
    tmp.close = this.close;
    tmp.ceil = this.ceil;
    tmp.flor = this.flor;
    tmp.profit = this.profit;
    tmp.upProb = this.upProb;
    tmp.ratio = this.ratio;
    tmp.date = this.date;
    tmp.volume = this.volume;
    
    return tmp;
}
Similar.ChartData.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("high") || (this.high = json.high);
    !json.hasOwnProperty("low") || (this.low = json.low);
    !json.hasOwnProperty("open") || (this.open = json.open);
    !json.hasOwnProperty("close") || (this.close = json.close);
    !json.hasOwnProperty("ceil") || (this.ceil = json.ceil);
    !json.hasOwnProperty("flor") || (this.flor = json.flor);
    !json.hasOwnProperty("profit") || (this.profit = json.profit);
    !json.hasOwnProperty("upProb") || (this.upProb = json.upProb);
    !json.hasOwnProperty("ratio") || (this.ratio = json.ratio);
    !json.hasOwnProperty("date") || (this.date = json.date);
    !json.hasOwnProperty("volume") || (this.volume = json.volume);
}
Similar.ChartData.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.ChartData.new = function () {
    return new Similar.ChartData();
}
Similar.ChartData.create = function (is) {
    return Similar.ChartData._readFrom(is);
}
Similar.Predict = function() {
    this.code = "";
    this.name = "";
    this.type = 0;
    this.mkt = 0;
    this.chartDataList = new TafStream.List(Similar.ChartData);
    this._classname = "Similar.Predict";
};
Similar.Predict.prototype = new TafStream.JceStruct();
Similar.Predict._classname = "Similar.Predict";

Similar.Predict._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.Predict._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.Predict._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.Predict();
    tmp.code = is.readString(0, true, "");
    tmp.name = is.readString(1, false, "");
    tmp.type = is.readInt32(2, false, 0);
    tmp.mkt = is.readInt32(3, false, 0);
    tmp.chartDataList = is.readList(4, false, TafStream.List(Similar.ChartData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.Predict.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.code);
    if (this.name != undefined && this.name != "") {
        os.writeString(1, this.name);
    }
    if (this.type != undefined && this.type != 0) {
        os.writeInt32(2, this.type);
    }
    if (this.mkt != undefined && this.mkt != 0) {
        os.writeInt32(3, this.mkt);
    }
    if (this.chartDataList != undefined && this.chartDataList.length > 0) {
        os.writeList(4, this.chartDataList);
    }
    os.resumePrecision && os.resumePrecision();
};
Similar.Predict.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.Predict.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.Predict.prototype.toObject = function() { 
    var tmp = {};

    tmp.code = this.code;
    tmp.name = this.name;
    tmp.type = this.type;
    tmp.mkt = this.mkt;
    tmp.chartDataList = this.chartDataList.toObject();
    
    return tmp;
}
Similar.Predict.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("code") || (this.code = json.code);
    !json.hasOwnProperty("name") || (this.name = json.name);
    !json.hasOwnProperty("type") || (this.type = json.type);
    !json.hasOwnProperty("mkt") || (this.mkt = json.mkt);
    !json.hasOwnProperty("chartDataList") || (this.chartDataList.readFromObject(json.chartDataList));
}
Similar.Predict.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.Predict.new = function () {
    return new Similar.Predict();
}
Similar.Predict.create = function (is) {
    return Similar.Predict._readFrom(is);
}
Similar.SinglePredictReq = function() {
    this.cycle = Similar.Cycle.OneDay;
    this.type = 0;
    this.market = 0;
    this.code = "";
    this._classname = "Similar.SinglePredictReq";
};
Similar.SinglePredictReq.prototype = new TafStream.JceStruct();
Similar.SinglePredictReq._classname = "Similar.SinglePredictReq";

Similar.SinglePredictReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.SinglePredictReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.SinglePredictReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.SinglePredictReq();
    tmp.cycle = is.readInt32(0, true, Similar.Cycle.OneDay);
    tmp.type = is.readInt32(1, true, 0);
    tmp.market = is.readInt32(2, false, 0);
    tmp.code = is.readString(3, true, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.SinglePredictReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.cycle);
    os.writeInt32(1, this.type);
    if (this.market != undefined && this.market != 0) {
        os.writeInt32(2, this.market);
    }
    os.writeString(3, this.code);
    os.resumePrecision && os.resumePrecision();
};
Similar.SinglePredictReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.SinglePredictReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.SinglePredictReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.cycle = this.cycle;
    tmp.type = this.type;
    tmp.market = this.market;
    tmp.code = this.code;
    
    return tmp;
}
Similar.SinglePredictReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("cycle") || (this.cycle = json.cycle);
    !json.hasOwnProperty("type") || (this.type = json.type);
    !json.hasOwnProperty("market") || (this.market = json.market);
    !json.hasOwnProperty("code") || (this.code = json.code);
}
Similar.SinglePredictReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.SinglePredictReq.new = function () {
    return new Similar.SinglePredictReq();
}
Similar.SinglePredictReq.create = function (is) {
    return Similar.SinglePredictReq._readFrom(is);
}
Similar.SinglePredictRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.predict = new Similar.Predict();
    this._classname = "Similar.SinglePredictRsp";
};
Similar.SinglePredictRsp.prototype = new TafStream.JceStruct();
Similar.SinglePredictRsp._classname = "Similar.SinglePredictRsp";

Similar.SinglePredictRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.SinglePredictRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.SinglePredictRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.SinglePredictRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.sMsg = is.readString(1, true, "");
    tmp.predict = is.readStruct(2, true, Similar.Predict);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.SinglePredictRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    os.writeString(1, this.sMsg);
    os.writeStruct(2, this.predict);
    os.resumePrecision && os.resumePrecision();
};
Similar.SinglePredictRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.SinglePredictRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.SinglePredictRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.predict = this.predict.toObject();
    
    return tmp;
}
Similar.SinglePredictRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("predict") || (this.predict.readFromObject(json.predict));
}
Similar.SinglePredictRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.SinglePredictRsp.new = function () {
    return new Similar.SinglePredictRsp();
}
Similar.SinglePredictRsp.create = function (is) {
    return Similar.SinglePredictRsp._readFrom(is);
}
Similar.PredictListReq = function() {
    this.cycle = Similar.Cycle.OneDay;
    this.category = Similar.Category.Nav;
    this.plate = Similar.Plate.HS;
    this.sort = 0;
    this._classname = "Similar.PredictListReq";
};
Similar.PredictListReq.prototype = new TafStream.JceStruct();
Similar.PredictListReq._classname = "Similar.PredictListReq";

Similar.PredictListReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.PredictListReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.PredictListReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.PredictListReq();
    tmp.cycle = is.readInt32(0, true, Similar.Cycle.OneDay);
    tmp.category = is.readInt32(1, true, Similar.Category.Nav);
    tmp.plate = is.readInt32(2, false, Similar.Plate.HS);
    tmp.sort = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.PredictListReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.cycle);
    os.writeInt32(1, this.category);
    os.writeInt32(2, this.plate);
    if (this.sort != undefined && this.sort != 0) {
        os.writeInt32(3, this.sort);
    }
    os.resumePrecision && os.resumePrecision();
};
Similar.PredictListReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.PredictListReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.PredictListReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.cycle = this.cycle;
    tmp.category = this.category;
    tmp.plate = this.plate;
    tmp.sort = this.sort;
    
    return tmp;
}
Similar.PredictListReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("cycle") || (this.cycle = json.cycle);
    !json.hasOwnProperty("category") || (this.category = json.category);
    !json.hasOwnProperty("plate") || (this.plate = json.plate);
    !json.hasOwnProperty("sort") || (this.sort = json.sort);
}
Similar.PredictListReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.PredictListReq.new = function () {
    return new Similar.PredictListReq();
}
Similar.PredictListReq.create = function (is) {
    return Similar.PredictListReq._readFrom(is);
}
Similar.PredictListRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.predictList = new TafStream.List(Similar.Predict);
    this._classname = "Similar.PredictListRsp";
};
Similar.PredictListRsp.prototype = new TafStream.JceStruct();
Similar.PredictListRsp._classname = "Similar.PredictListRsp";

Similar.PredictListRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.PredictListRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.PredictListRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.PredictListRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.sMsg = is.readString(1, true, "");
    tmp.predictList = is.readList(2, true, TafStream.List(Similar.Predict));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.PredictListRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    os.writeString(1, this.sMsg);
    os.writeList(2, this.predictList);
    os.resumePrecision && os.resumePrecision();
};
Similar.PredictListRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.PredictListRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.PredictListRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.predictList = this.predictList.toObject();
    
    return tmp;
}
Similar.PredictListRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("predictList") || (this.predictList.readFromObject(json.predictList));
}
Similar.PredictListRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.PredictListRsp.new = function () {
    return new Similar.PredictListRsp();
}
Similar.PredictListRsp.create = function (is) {
    return Similar.PredictListRsp._readFrom(is);
}
Similar.Kline = function() {
    this.code = "";
    this.name = "";
    this.semBlance = 0;
    this.profit = 0;
    this.industry = "";
    this.value = 0;
    this.matchTime = 0;
    this.startDate = "";
    this.endDate = "";
    this.chartDataList = new TafStream.List(Similar.ChartData);
    this._classname = "Similar.Kline";
};
Similar.Kline.prototype = new TafStream.JceStruct();
Similar.Kline._classname = "Similar.Kline";

Similar.Kline._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.Kline._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.Kline._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.Kline();
    tmp.code = is.readString(0, false, "");
    tmp.name = is.readString(1, false, "");
    tmp.semBlance = is.readInt32(2, false, 0);
    tmp.profit = is.readInt32(3, false, 0);
    tmp.industry = is.readString(4, false, "");
    tmp.value = is.readDouble(5, false, 0);
    tmp.matchTime = is.readInt32(6, false, 0);
    tmp.startDate = is.readString(7, false, "");
    tmp.endDate = is.readString(8, false, "");
    tmp.chartDataList = is.readList(9, false, TafStream.List(Similar.ChartData));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.Kline.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.code != undefined && this.code != "") {
        os.writeString(0, this.code);
    }
    if (this.name != undefined && this.name != "") {
        os.writeString(1, this.name);
    }
    if (this.semBlance != undefined && this.semBlance != 0) {
        os.writeInt32(2, this.semBlance);
    }
    if (this.profit != undefined && this.profit != 0) {
        os.writeInt32(3, this.profit);
    }
    if (this.industry != undefined && this.industry != "") {
        os.writeString(4, this.industry);
    }
    if (this.value != undefined && this.value != 0) {
        os.writeDouble(5, this.value);
    }
    if (this.matchTime != undefined && this.matchTime != 0) {
        os.writeInt32(6, this.matchTime);
    }
    if (this.startDate != undefined && this.startDate != "") {
        os.writeString(7, this.startDate);
    }
    if (this.endDate != undefined && this.endDate != "") {
        os.writeString(8, this.endDate);
    }
    if (this.chartDataList != undefined && this.chartDataList.length > 0) {
        os.writeList(9, this.chartDataList);
    }
    os.resumePrecision && os.resumePrecision();
};
Similar.Kline.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.Kline.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.Kline.prototype.toObject = function() { 
    var tmp = {};

    tmp.code = this.code;
    tmp.name = this.name;
    tmp.semBlance = this.semBlance;
    tmp.profit = this.profit;
    tmp.industry = this.industry;
    tmp.value = this.value;
    tmp.matchTime = this.matchTime;
    tmp.startDate = this.startDate;
    tmp.endDate = this.endDate;
    tmp.chartDataList = this.chartDataList.toObject();
    
    return tmp;
}
Similar.Kline.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("code") || (this.code = json.code);
    !json.hasOwnProperty("name") || (this.name = json.name);
    !json.hasOwnProperty("semBlance") || (this.semBlance = json.semBlance);
    !json.hasOwnProperty("profit") || (this.profit = json.profit);
    !json.hasOwnProperty("industry") || (this.industry = json.industry);
    !json.hasOwnProperty("value") || (this.value = json.value);
    !json.hasOwnProperty("matchTime") || (this.matchTime = json.matchTime);
    !json.hasOwnProperty("startDate") || (this.startDate = json.startDate);
    !json.hasOwnProperty("endDate") || (this.endDate = json.endDate);
    !json.hasOwnProperty("chartDataList") || (this.chartDataList.readFromObject(json.chartDataList));
}
Similar.Kline.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.Kline.new = function () {
    return new Similar.Kline();
}
Similar.Kline.create = function (is) {
    return Similar.Kline._readFrom(is);
}
Similar.SimilarKlineSample = function() {
    this.sampleNum = 0;
    this.positiveSample = 0;
    this.negativeSample = 0;
    this.upProb = 0;
    this.avgProfit = 0;
    this.middleProfit = 0;
    this.positiveAvgProfit = 0;
    this.positiveMiddleProfit = 0;
    this.negativeAvgProfit = 0;
    this.negativeMiddleProfit = 0;
    this.ratio = 0;
    this.ceil = 0;
    this.flor = 0;
    this.cycle = Similar.Cycle.OneDay;
    this.klineList = new TafStream.List(Similar.Kline);
    this._classname = "Similar.SimilarKlineSample";
};
Similar.SimilarKlineSample.prototype = new TafStream.JceStruct();
Similar.SimilarKlineSample._classname = "Similar.SimilarKlineSample";

Similar.SimilarKlineSample._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.SimilarKlineSample._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.SimilarKlineSample._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.SimilarKlineSample();
    tmp.sampleNum = is.readInt32(0, false, 0);
    tmp.positiveSample = is.readInt32(1, false, 0);
    tmp.negativeSample = is.readInt32(2, false, 0);
    tmp.upProb = is.readInt32(3, false, 0);
    tmp.avgProfit = is.readInt32(4, false, 0);
    tmp.middleProfit = is.readInt32(5, false, 0);
    tmp.positiveAvgProfit = is.readInt32(6, false, 0);
    tmp.positiveMiddleProfit = is.readInt32(7, false, 0);
    tmp.negativeAvgProfit = is.readInt32(8, false, 0);
    tmp.negativeMiddleProfit = is.readInt32(9, false, 0);
    tmp.ratio = is.readInt32(10, false, 0);
    tmp.ceil = is.readInt32(11, false, 0);
    tmp.flor = is.readInt32(12, false, 0);
    tmp.cycle = is.readInt32(13, false, Similar.Cycle.OneDay);
    tmp.klineList = is.readList(14, false, TafStream.List(Similar.Kline));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.SimilarKlineSample.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sampleNum != undefined && this.sampleNum != 0) {
        os.writeInt32(0, this.sampleNum);
    }
    if (this.positiveSample != undefined && this.positiveSample != 0) {
        os.writeInt32(1, this.positiveSample);
    }
    if (this.negativeSample != undefined && this.negativeSample != 0) {
        os.writeInt32(2, this.negativeSample);
    }
    if (this.upProb != undefined && this.upProb != 0) {
        os.writeInt32(3, this.upProb);
    }
    if (this.avgProfit != undefined && this.avgProfit != 0) {
        os.writeInt32(4, this.avgProfit);
    }
    if (this.middleProfit != undefined && this.middleProfit != 0) {
        os.writeInt32(5, this.middleProfit);
    }
    if (this.positiveAvgProfit != undefined && this.positiveAvgProfit != 0) {
        os.writeInt32(6, this.positiveAvgProfit);
    }
    if (this.positiveMiddleProfit != undefined && this.positiveMiddleProfit != 0) {
        os.writeInt32(7, this.positiveMiddleProfit);
    }
    if (this.negativeAvgProfit != undefined && this.negativeAvgProfit != 0) {
        os.writeInt32(8, this.negativeAvgProfit);
    }
    if (this.negativeMiddleProfit != undefined && this.negativeMiddleProfit != 0) {
        os.writeInt32(9, this.negativeMiddleProfit);
    }
    if (this.ratio != undefined && this.ratio != 0) {
        os.writeInt32(10, this.ratio);
    }
    if (this.ceil != undefined && this.ceil != 0) {
        os.writeInt32(11, this.ceil);
    }
    if (this.flor != undefined && this.flor != 0) {
        os.writeInt32(12, this.flor);
    }
    os.writeInt32(13, this.cycle);
    if (this.klineList != undefined && this.klineList.length > 0) {
        os.writeList(14, this.klineList);
    }
    os.resumePrecision && os.resumePrecision();
};
Similar.SimilarKlineSample.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.SimilarKlineSample.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.SimilarKlineSample.prototype.toObject = function() { 
    var tmp = {};

    tmp.sampleNum = this.sampleNum;
    tmp.positiveSample = this.positiveSample;
    tmp.negativeSample = this.negativeSample;
    tmp.upProb = this.upProb;
    tmp.avgProfit = this.avgProfit;
    tmp.middleProfit = this.middleProfit;
    tmp.positiveAvgProfit = this.positiveAvgProfit;
    tmp.positiveMiddleProfit = this.positiveMiddleProfit;
    tmp.negativeAvgProfit = this.negativeAvgProfit;
    tmp.negativeMiddleProfit = this.negativeMiddleProfit;
    tmp.ratio = this.ratio;
    tmp.ceil = this.ceil;
    tmp.flor = this.flor;
    tmp.cycle = this.cycle;
    tmp.klineList = this.klineList.toObject();
    
    return tmp;
}
Similar.SimilarKlineSample.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sampleNum") || (this.sampleNum = json.sampleNum);
    !json.hasOwnProperty("positiveSample") || (this.positiveSample = json.positiveSample);
    !json.hasOwnProperty("negativeSample") || (this.negativeSample = json.negativeSample);
    !json.hasOwnProperty("upProb") || (this.upProb = json.upProb);
    !json.hasOwnProperty("avgProfit") || (this.avgProfit = json.avgProfit);
    !json.hasOwnProperty("middleProfit") || (this.middleProfit = json.middleProfit);
    !json.hasOwnProperty("positiveAvgProfit") || (this.positiveAvgProfit = json.positiveAvgProfit);
    !json.hasOwnProperty("positiveMiddleProfit") || (this.positiveMiddleProfit = json.positiveMiddleProfit);
    !json.hasOwnProperty("negativeAvgProfit") || (this.negativeAvgProfit = json.negativeAvgProfit);
    !json.hasOwnProperty("negativeMiddleProfit") || (this.negativeMiddleProfit = json.negativeMiddleProfit);
    !json.hasOwnProperty("ratio") || (this.ratio = json.ratio);
    !json.hasOwnProperty("ceil") || (this.ceil = json.ceil);
    !json.hasOwnProperty("flor") || (this.flor = json.flor);
    !json.hasOwnProperty("cycle") || (this.cycle = json.cycle);
    !json.hasOwnProperty("klineList") || (this.klineList.readFromObject(json.klineList));
}
Similar.SimilarKlineSample.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.SimilarKlineSample.new = function () {
    return new Similar.SimilarKlineSample();
}
Similar.SimilarKlineSample.create = function (is) {
    return Similar.SimilarKlineSample._readFrom(is);
}
Similar.SimilarKlineReq = function() {
    this.taskId = "";
    this._classname = "Similar.SimilarKlineReq";
};
Similar.SimilarKlineReq.prototype = new TafStream.JceStruct();
Similar.SimilarKlineReq._classname = "Similar.SimilarKlineReq";

Similar.SimilarKlineReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.SimilarKlineReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.SimilarKlineReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.SimilarKlineReq();
    tmp.taskId = is.readString(0, true, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.SimilarKlineReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeString(0, this.taskId);
    os.resumePrecision && os.resumePrecision();
};
Similar.SimilarKlineReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.SimilarKlineReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.SimilarKlineReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.taskId = this.taskId;
    
    return tmp;
}
Similar.SimilarKlineReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("taskId") || (this.taskId = json.taskId);
}
Similar.SimilarKlineReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.SimilarKlineReq.new = function () {
    return new Similar.SimilarKlineReq();
}
Similar.SimilarKlineReq.create = function (is) {
    return Similar.SimilarKlineReq._readFrom(is);
}
Similar.SimilarKlineRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.similarKlineSample = new Similar.SimilarKlineSample();
    this._classname = "Similar.SimilarKlineRsp";
};
Similar.SimilarKlineRsp.prototype = new TafStream.JceStruct();
Similar.SimilarKlineRsp._classname = "Similar.SimilarKlineRsp";

Similar.SimilarKlineRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.SimilarKlineRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.SimilarKlineRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.SimilarKlineRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.sMsg = is.readString(1, true, "");
    tmp.similarKlineSample = is.readStruct(2, false, Similar.SimilarKlineSample);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.SimilarKlineRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    os.writeString(1, this.sMsg);
    os.writeStruct(2, this.similarKlineSample);
    os.resumePrecision && os.resumePrecision();
};
Similar.SimilarKlineRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.SimilarKlineRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.SimilarKlineRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.similarKlineSample = this.similarKlineSample.toObject();
    
    return tmp;
}
Similar.SimilarKlineRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("similarKlineSample") || (this.similarKlineSample.readFromObject(json.similarKlineSample));
}
Similar.SimilarKlineRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.SimilarKlineRsp.new = function () {
    return new Similar.SimilarKlineRsp();
}
Similar.SimilarKlineRsp.create = function (is) {
    return Similar.SimilarKlineRsp._readFrom(is);
}
Similar.StockInfoRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.codeList = new TafStream.List(TafStream.String);
    this._classname = "Similar.StockInfoRsp";
};
Similar.StockInfoRsp.prototype = new TafStream.JceStruct();
Similar.StockInfoRsp._classname = "Similar.StockInfoRsp";

Similar.StockInfoRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
Similar.StockInfoRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
Similar.StockInfoRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new Similar.StockInfoRsp();
    tmp.iRet = is.readInt32(0, true, 0);
    tmp.sMsg = is.readString(1, true, "");
    tmp.codeList = is.readList(2, false, TafStream.List(TafStream.String));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
Similar.StockInfoRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    os.writeInt32(0, this.iRet);
    os.writeString(1, this.sMsg);
    if (this.codeList != undefined && this.codeList.length > 0) {
        os.writeList(2, this.codeList);
    }
    os.resumePrecision && os.resumePrecision();
};
Similar.StockInfoRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
Similar.StockInfoRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
Similar.StockInfoRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.codeList = this.codeList.toObject();
    
    return tmp;
}
Similar.StockInfoRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("codeList") || (this.codeList.readFromObject(json.codeList));
}
Similar.StockInfoRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
Similar.StockInfoRsp.new = function () {
    return new Similar.StockInfoRsp();
}
Similar.StockInfoRsp.create = function (is) {
    return Similar.StockInfoRsp._readFrom(is);
}

Similar.SimilarKlineProxy.prototype.getPredictList = function (req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, Similar.PredictListRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getPredictList', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

Similar.SimilarKlineProxy.prototype.getSimilarKlineSample = function (req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, Similar.SimilarKlineRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getSimilarKlineSample', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

Similar.SimilarKlineProxy.prototype.getSinglePredict = function (req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, Similar.SinglePredictRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getSinglePredict', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

Similar.SimilarKlineProxy.prototype.getStockList = function () {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(1, true, Similar.StockInfoRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getStockList', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}



